generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model tab_inventory {
  item_id          Int                   @id @default(autoincrement()) @db.UnsignedInt
  item_type        String                @db.VarChar(255)
  item_brand       String?               @db.VarChar(255)
  item_model       String?               @db.VarChar(255)
  item_description String?               @db.VarChar(255)
  item_available   Boolean               @default(false)
  item_remarks     String?               @db.VarChar(255)
  item_lab_id      Int
  lab              tab_labs              @relation(fields: [item_lab_id], references: [lab_id])
  lendings         LendingsToInventory[]

  @@index([item_lab_id])
}

model tab_lendings {
  lending_id           Int                   @id @default(autoincrement()) @db.UnsignedInt
  lending_borrowdate   DateTime              @db.DateTime(0)
  lending_returneddate DateTime?             @db.DateTime(0)
  id_user              Int                   @db.UnsignedInt
  id_borrower          Int                   @db.UnsignedInt
  returned             Boolean               @default(false)
  lending_remarks      String?               @db.VarChar(255)
  user                 tab_users             @relation(fields: [id_user], references: [user_id])
  borrower             tab_borrower          @relation(fields: [id_borrower], references: [borrower_id])
  items                LendingsToInventory[]

  @@index([id_user])
  @@index([id_borrower])
}

model LendingsToInventory {
  id_item    Int
  id_lending Int
  items      tab_inventory @relation(fields: [id_item], references: [item_id])
  lendings   tab_lendings  @relation(fields: [id_lending], references: [lending_id])

  @@id([id_item, id_lending])
  @@index([id_item])
  @@index([id_lending])
}

model tab_borrower {
  borrower_id       Int            @id @db.UnsignedInt
  borrower_fullname String?        @db.VarChar(255)
  borrower_name     String         @db.VarChar(255)
  borrower_lastname String         @db.VarChar(255)
  borrower_type     String         @db.VarChar(255)
  borrower_career   String         @db.VarChar(255)
  borrower_semester String?        @db.VarChar(255)
  borrower_notes    String?        @db.VarChar(255)
  lendings          tab_lendings[]
}

model tab_labs {
  lab_id       Int             @id @default(autoincrement()) @db.UnsignedInt
  lab_name     String          @unique(map: "lab_name") @db.VarChar(255)
  lab_location String          @db.VarChar(255)
  inventory    tab_inventory[]
  users        tab_users[]
}

model tab_users {
  user_id          Int            @id @db.UnsignedInt
  user_fullname    String?        @db.VarChar(255)
  user_name        String         @db.VarChar(255)
  user_lastname    String?        @db.VarChar(255)
  user_email       String         @unique(map: "user_email") @db.VarChar(255)
  user_password    String         @db.VarChar(255)
  user_type        String?        @default("inactivo") @db.VarChar(255)
  user_jobposition String?        @db.VarChar(255)
  lab_id           Int?
  lendings         tab_lendings[]
  lab              tab_labs?      @relation(fields: [lab_id], references: [lab_id])
  history          tab_history[]

  @@index([lab_id])
}

model tab_history {
  history_id          Int      @id @default(autoincrement()) @db.UnsignedInt
  history_date        DateTime @db.DateTime(0)
  history_type        String   @db.VarChar(255)
  history_description String   @db.VarChar(255)
  id_user             Int      @db.UnsignedInt

  user tab_users @relation(fields: [id_user], references: [user_id])

  @@index([id_user])
}
